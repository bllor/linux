module5 - 시스템 관리

-----------------------------------
리눅스 파일 편집기(vi)
vi는 거의 모든 버전에서 사용할 수 있으므로 vi중심으로 수업
vi 명령어는 파일을 생성할 수 있음

common key
esc : escape of any mode


vi에디터에서
insert가 아닌 아무 상태가 아닐 때,
dx or dd를 누르면 커서가 있는 라인이 지워지고,
커서가 있는 단어를 지우고 싶으면 x를 누르면 된다.
지운 것을 다시 복구 하고 싶으면 u를 누르면 된다.
단어를 바꾸고 싶으면 r을 누르면 한 단어를 바꿀 수 있다.
o를 누르면 새로운 라인이 생기고, 자동으로 삽입모드가 된다.
검색을 할 경우 /keyword를 하게 되면 keyword에 해당하는 줄을 나타낸다.

저장을 할 경우 shift+z를 2번 누르면 된다.

-----------------------------------
vi & vim의 차이점
vim이 더 성능이 좋지만 , vi를 먼저 배우고 사용해야 한다.


-----------------------------------
sed commend


단어를 한 번에 변경할 수도 있고
빈공간을 제거할 수도 있고
tab으로 스페이스를 대신할 수 있다.

단어를 다른 단어로 바꾸기
sed 's/exist/new/g
s single code의 약어
g는 글로벌 - 모든 단어를 바꿀 때 사용
해당 명령어는 출력될 때만 변경되며, 파일 안의 내용이 변경되지 않는다.
sed  -i 's/exist/new/g'
이렇게 해야지 파일 안에서의 내용이 영구적으로 변경된다.

빈줄 지우기 :sed '/^$/d' file_name
첫줄 지우기 : sed '1d' file_name
두번째 줄까지 지우기 : sed '2d' file_name
탭으로 띄워쓰기 된 것을 띄워쓰기로 바꾸기 : sed 's/\t/ /g' file_name
\t는 탭을 나타낸다.

12~18번째 줄만 나타내고 싶으면?
-> sed -n 12,18p file_name

반대로 12~18번째 줄 말고 다른 것을 출력하고 싶으면
->sed 12,18d file_name

1,2,5번째 줄에 good가 있을 때 1,2번 째 줄의 special를 r로 바꿀 때 
sed '5!s/good/special/' file_name


-----------------------------------
사용자 계정관리
그룹 바꾸기 chgrp -R changedGroup existedGroup

그룹 추가하기
usermod -G superhero spiderman


사용자 추가하기
useradd -g superheros -s /bin/bash -c "ironman character" -m -d /home/ironman ironman
그룹은 superheros

사용자 비밀번호 지정 passwd userName


-----------------------------------
switch 사용자 및 sudo 엑세스

su - username : username으로 변경한다.
sudo command : root권한으로 해당 명령어를 실시한다.

-----------------------------------
사용자 모니터링(who, last, w, id)
사용자 모니터링을 사용할 때 쓰는 명령어

who
누가 로그인 했는지, 언제 로그인 했는지 알 수 있다.

last
첫날부터 로그인한 모든 사용자의 정보를 보여준다.
시스템을 재부팅하거나 껐을 때의 기록들이 남아있다.

w
로그인 타임이나 시간, 어떤 프로세스를 사용했는지 보여준다.

finger
사용자의 흔적 추적
어디서 오고, 어떤 명령어를 사용하는지
yum install finger -y or yum install pinky -y
명령어가 바뀌었을 수 있으니 두개를 번갈아 가며 사용

id
사용자들의 id를 보여준다.


---------------------------------------------
사용자와 대화하기

wall: 해당 리눅스에 접속한 모든 사용자에게 메시지를 전달
write: 리눅스에 접속한 한 명의 사용자에게 메시지를 전달


wall을 입력하고 보내고 싶은 메시지를 입력하고, ctrl+d를 하면 
메시지를 보낼 수 있다.
write username -> 메시지를 보내고 엔터를 누르면 해당 메시지가 전달된다.



*
ip확인 ifconfig

---------------------------------------------
리눅스 디렉터리 서비스 - 계정 인증

계정에는 로컬유형과 디렉터리 계정이 있다.

클라이언트에서 서버로 계정인증요청을 할 때 사용한다.
로컬에서의 요청이 아닐 때 디렉터리 서비스를 이용한다.

LDAP 디렉터리에 대한 인증을 받기 위해 사용하는 프로트콜

---------------------------------------------
active directory, LDAP, IDM, WinBIND, OpenLDAP 


엑티브 디렉터리 == ms에서 만든 것
idm =- identity manager -> redhat에서 만든 것
windBIND(samba) = 윈도우와 리눅스를 연결하기 위해 만든 것
openLDAP = 리눅스나 유닉스에 사용되고 디렉터리 서비스를 제공한다.

---------------------------------------------
시스템 유틸리티 명령
date : 시간을 알고 싶을 때 사용
uptime : 현재시간, 시스템 운영시간, 시스템 사용자 수, 평균부하량(CPU사용량).
hostname : 현재 로그인한 사용자의 정보
uname : 리눅스같은 유틸리티의 이름
which : 명령의 실행 위치
cal : 달력을 보여준다.
bc : 계산기

*명령은 스크립트 파일이고, 그 스크립트 파일은 개발자가 만든 것이다.
which pwd를 하게 될 경우 pwd스크립트가 존재하는 스크립트의 위치를 보여준다.

---------------------------------------------
프로세스, 작업 및 스케줄링
1.application
서비스라고 불리며, 컴퓨터에서 실행되는 프로그램, 아파치 등등

2.script
파일에 작성되어 명령이 실행될 수 있도록 패키지화 되어 있는 것
모든 명령이 스크립트화 되어있다.

3.process
어플리케이션을 실행하거나 시작할 때 프로세스를 생성

4.daemon
백그라운드를 실행하면서 멈추기 전까지 계속 실행하는 것

5.threads
하나의 프로세스에 여러 개의 스레드가 존재한다.

6.job
일정관리자에 의해 생성된 것으로 응용 프로그램과 서비스 프로세스, 서비스 명령을 실행하는 작업 명령 같은 것


systemctl or service : 리눅스가 생성되면서 종료될 때가지 실행되는 프로세스 및 설정 파일

ps : 현재 실행중인 프로세스를 보여준다.

top: 모든 프로세스를 보여준다.

kill 프로세스를 죽이는 명령어

crontab: 
응용프로그램이나 프로세스, 서비스를 시스템에 스케쥴링하는데 사용된다.
특정시간에 특정작업을 하는 데몬을 저장해놓은 것 

at: 
비정기적으로 반복되는 작업을 진행

---------------------------------------------
systemctl
시스템 통제 명령
어플리케이션을 실행할 때 사용된다.

서비스를 실행하거나 멈추거나 현재 상태를 나타낼 수도 있으며, 컴퓨터가 부팅될 때 사용하는 명령어도 존재한다.
systemctl start // stop // status // enable servicename.service

서비스 재시작 systemctl restart // reload servicename.service

서비스 유닛의 리스트 : systemctal list-units

---------------------------------------------
ps 명령어
현재 셸에서의 프로세스 상태를 보여준다.
tty : 유저의 터미널 타입
cmd : 명령의 이름
time : 이 프로세스가 실행되고 잇는 cpu와 분, 초를 의미한다.

ps -e : 실행 중인 모든 프로세스를 보여줌
ps -ef: 모든 실행프로세스와 전체 형식의 목록을 보여준다.
ps -u username : 해당 유저에 의해 실행되는 모든 프로세스를 보여준다.

ps -ef | grep pid or serviceName : pid 또는 serviceName의 프로세스와 형식을 보여준다.

---------------------------------------------
top명령어

현재 실행중인 시스템과 리눅스 프로세스를 보여준다.
해당 명령어에서 벗어나고 싶으면 q를 누르면 된다.

top의 칼럼
pr: 스케쥴 우선순위
ni pr에 영향을 주는 값 // 낮을수록 우선순위가 높다
virt: 작업에 사용되는 전체 가상 메모리
res: ram에서 사용중인 메모리의 크기
shr: 다른 프로세스와 공유메모리
s : 프로세스의 현재 상태
%cpu : cpu사용량
%mem : ram에서 res가 차지하는 비율
time + command : 해당 프로세스릉 실행한 커맨드

top -u username : username의 소유권인 프로세스를 보여준다.
top then press c : 절대 경로로 보여준다.
top then press k : kill할 수 있게 해준다.
top then M and P : 메모리 사용량에 의해 리눅스 프로세스를 정렬한다.

top 커맨드는 3초마다 새로고침된다.
*
좀비 프로세스
:부모- 자식관계에서 부모가 죽었을 때 남아있는 자식 서비스

---------------------------------------------
kill 명령어

해당프로세스를 종료하고 싶을 때 사용하면 된다.

kill [option] PID

[option]
-l : 시그널 네임의 종류(옵션의 종류)
-1 : 재시작
-9 : 완전히 죽이기
-2 : ctrl+c가 방해하지 못하게 함

pkill 이름으로 명령어 죽이기

---------------------------------------------
crontab
스케쥴 시스템을 이용하여 반복적인 명령 실행

crontab -e : crontab을 편집
crontab -l : crontab의 리스트를 보여줌
crontab -r : crontab을 제거
crond : 스케쥴링을 실행하거나 백그라운드로 실행한다.
systemctl status crond : 크론 서비스를 관리한다.

*****명령어
첫번째 * : 분
첫번째 * : 시
첫번째 * : 일
첫번째 * : 달
첫번째 * : 일주일 중 몇번

*2*** command 2시간마다 한 번씩
***3* 3달마다 한 번씩
****1 일요일마다
****4 수요일마다

모든 cron 파일은 /etc/cron에 저장된다.
시간단위로 실행되는 파일은 /etc/cron/hourly에 저장되며,
주단위로 실행되는 파일은 /etc/cron/weekly에 저장된다.

cat /etc/anacrontab 
-hourly, weekly등으로 되어있는 디렉터리 중 실행시간이 명시되어 있지 않은 파일의
실행시간 및 날짜를 지정할 수 있다.

---------------------------------------------
at 명령어

시간을 정해서 사용할 수 있지만 한 번만 수행하고 싶을 때 사용한다.

at HH:MM PM|AM : 프로세스의 시작시간을 정함
atq : 엔트리의 리스트 <- 이미 실행된 것은 출력되지 않는다.
atrm # : #에 해당하는 엔트리를 지운다
atd : 
systemctl status atd : 엔트리를 관리한다.

at 2:45 am 101621 : 2021.10.16 2:45에 명령어 실행
at 4pm + 4days : 4일뒤에 명령어 실행
at now+5 hours : 5시간 뒤에 명령어 실행

---------------------------------------------
프로세스 관리
bg: 백그라운드
fg: foreground 활성화
nice: -20~19까지 있는데 숫자가 낮을수록 우선순위가 높다.

nohup process & -> 백그라운드 실행이 된다.

nohup process > /dev/null 2>1& &
--> 오류메시지 ,경고 같이 실행 파일에 의해 발생하는 출력이 나오지 않는다.
/dev/null이라는 폴더에 표준에러(2)와 표준출력(1)을 넣어 놓는다.
job명령으로 실행된 명령들을 볼 수 있으며,
bg 명령, fg 명령을 통해 백그라운드로 보내던지, 활성화할 수 있다.

*sleep 5 5초동안 프롬프트가 안뜬다.

---------------------------------------------
시스템 모니터링

top : 
실행중인 서비스 및 프로세스를 확인할 수 있다.

df : 
디스크 사용량 나타낸다.
df -h : 디스크 사용량을 읽기 쉽게 나타낸다.

dmesg
시스템의 출력을 보여준다. 경고, 오류 메시지 같은 것들


iostat 
네트워크, 내부장치 등 입출력에 관한 정보를 보여준다.

iostat 1 : 1초마다 새로고침된다.

netstat
:네트워크에 관한 정보
netstat -rnv : 게이트웨이 정보를 찾거나 서브넷에 관한 정보, 어떤 인터페이스를 거치는지 찾을 때 사용한다.

free
메모리와 스왑메모리에 관해 보여준다.

cat /proc/cpuinfo
cpu정보를 볼 수 있다.

cat /proc/meminfo
메모리의 정보를 볼 수 있다.

---------------------------------------------
시스템 로그 모니터링

log 폴더 = /var/log

boot
부팅할 때 발생하는 에러나 경고 메시지가 저장된다.

chronyd = NTP
cron daemon을 확인

cron
cron작업이 실행된 것을 기록

maillog
sendmail 또는 qmail 등과 같은 메일 송수신 관련 내역들과 ipop 또는 imap등과 같은
수신 내역들을 기록

secure
시스템 사용자의 원격 로그인 정보를 저장하는 로그

messages
컴퓨터가 문제가 생겼을 때 로그기록을 보는데 모든 로그 기록이 여기에 저장된다.

httpd

---------------------------------------------
시스템 유지 관리 명령

shutdown


init 
init0-6 0부터 6단계까지 존재한다.

reboot


halt
컴퓨터 전원을 끈다
물리적 전원버튼을 눌러 끄는 것과 같다.

---------------------------------------------
시스템 호스트 이름 변경
hostnamectl set-hostname NewHostName --> 그 다음 reboot를 한다.
vi /etc/hostname에서 변경해도 같다.

---------------------------------------------
운영체제의 정보를 아는 방법
cat /etc/redhat-release
uname -a
dimdecode

---------------------------------------------
시스템 아키텍쳐
시스템은 	32bit 64bit로 나뉘어지는데 둘의 차이는 CPU의 속도이다.
32bit에서는 64bit로 구성된 프로그램이 작동하지 않는다.
시스템 아키텍쳐를 확인하는 명령어는 arch이다.

---------------------------------------------
컨트롤 키

ctrl-u cmd라인을 지워준다.
ctrl-d 동작하는 명령에서 나올 수 있다.

---------------------------------------------
터미널 명렁어
script
script filename을 입력한 후에 명령을 입력하면,
명령 및 실행된 내용이 filename에 저장이 된다.
exit를 누르면 저장을 멈춘다.

---------------------------------------------
sos report
리눅스에 에러가 나서 조치가 필요할 때 로그기록 및 실행기록을 압축파일로 만들어준다




